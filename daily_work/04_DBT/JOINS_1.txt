JOINS_1

mysql> SELECT * FROM EMP1;
+-------+--------+------+--------+------+------+
| Empno | Ename  | sal  | DeptNo | Job  | MGR  |
+-------+--------+------+--------+------+------+
| 1     | Arun   | 8000 | 1      | M    | 4    |
| 2     | Ali    | 7000 | 1      | C    | 1    |
| 3     | Kiran  | 3000 | 1      | C    | 1    |
| 5     | Thomas | 8000 | 2      | C    | 4    |
| 4     | Jack   | 9000 | 2      | M    | NULL |
+-------+--------+------+--------+------+------+
5 rows in set (0.05 sec)

mysql> DESC EMP1;
+--------+----------+------+-----+---------+-------+
| Field  | Type     | Null | Key | Default | Extra |
+--------+----------+------+-----+---------+-------+
| Empno  | char(5)  | YES  |     | NULL    |       |
| Ename  | char(20) | YES  |     | NULL    |       |
| sal    | float    | YES  |     | NULL    |       |
| DeptNo | char(5)  | YES  |     | NULL    |       |
| Job    | char(4)  | YES  |     | NULL    |       |
| MGR    | char(5)  | YES  |     | NULL    |       |
+--------+----------+------+-----+---------+-------+
6 rows in set (0.05 sec)

mysql> CREATE TABLE DEPT
    -> (
    ->  DeptNo char(5),
    ->  DName varchar(20),
    ->  Loc varchar(20)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> insert into dept(deptno, dname, loc)
    -> values
    -> ('1','TRN','Bby'),
    -> ('2','EXP','Dlh'),
    -> ('3','MKTG','Cal');
Query OK, 3 rows affected (0.05 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from dept;
+--------+-------+------+
| DeptNo | DName | Loc  |
+--------+-------+------+
| 1      | TRN   | Bby  |
| 2      | EXP   | Dlh  |
| 3      | MKTG  | Cal  |
+--------+-------+------+
3 rows in set (0.00 sec)

--joins

mysql> mysql> select ename, dname from emp1 , dept
    -> where emp1.empno = dept.deptno;
+-------+-------+-------+
| empno | ename | dname |
+-------+-------+-------+
| 1     | Arun  | TRN   |
| 2     | Ali   | EXP   |
| 3     | Kiran | MKTG  |
+-------+-------+-------+
3 rows in set (0.04 sec)

-- order in select and where can be any

mysql> select ename, dname from emp1 , dept
    -> where emp1.empno = dept.deptno;
+-------+-------+
| ename | dname |
+-------+-------+
| Arun  | TRN   |
| Ali   | EXP   |
| Kiran | MKTG  |
+-------+-------+
3 rows in set (0.00 sec)


--> FAST
mysql> select ename, dname from emp1 , dept
 			      -------------
    -> where emp1.empno = dept.deptno;

--> SLOW
mysql> select ename, dname from dept, emp1
			       ------------
    -> where emp1.empno = dept.deptno;


-- ORDER BY

mysql> select dept.deptno, emp1.ename from emp1 , dept
    -> where dept.deptno = emp1.empno
    -> ORDER BY deptno;
+--------+-------+
| deptno | ename |
+--------+-------+
| 1      | Arun  |
| 2      | Ali   |
| 3      | Kiran |
+--------+-------+
3 rows in set (0.00 sec)


-- FUNCTIONS 

mysql> select dept.deptno, sum(sal) from emp1, dept
    -> where dept.deptno = emp1.empno
    -> group by dept.deptno;
+--------+----------+
| deptno | sum(sal) |
+--------+----------+
| 1      |     8000 |
| 2      |     7000 |
| 3      |     3000 |
+--------+----------+
3 rows in set (0.05 sec)


mysql> select dept.dname, sum(sal) from emp1, dept
    -> where dept.deptno = emp1.empno
    -> group by dept.dname;
+-------+----------+
| dname | sum(sal) |
+-------+----------+
| TRN   |     8000 |
| EXP   |     7000 |
| MKTG  |     3000 |
+-------+----------+
3 rows in set (0.00 sec)


mysql> select upper(dept.dname), sum(sal) from emp1, dept
    -> where dept.deptno = emp1.empno
    -> group by dept.dname;
+-------------------+----------+
| upper(dept.dname) | sum(sal) |
+-------------------+----------+
| TRN               |     8000 |
| EXP               |     7000 |
| MKTG              |     3000 |
+-------------------+----------+
3 rows in set (0.00 sec)

mysql> select upper(dept.dname), sum(sal) from emp1, dept
    -> where dept.deptno = emp1.empno
    -> group by dept.dname
    -> having sum(sal) > 5000
    -> order by 1;
+-------------------+----------+
| upper(dept.dname) | sum(sal) |
+-------------------+----------+
| EXP               |     7000 |
| TRN               |     8000 |
+-------------------+----------+
2 rows in set (0.00 sec)


